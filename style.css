/*CSS Grids is very similar to CSS flexbox and I highly reccomend that you start there to get oriented before starting this material.
Summary: 
Flexbox is a way to lay out things in one dimension based on the size of the flexbox container.
Grid is the same but allows for 2 dimensions. 

Grid uses a grid container which houses different grid items which can have differnt sizes and poitions. grid also uses grid tracks to separate the different parts
of the grid and grid gaps that augment the space between the various components.

Grid Container properties:
grid: ; - Doesnt do anything on its own rows and columns will need to be defined
grid-template-[something]: replace something with columns, rows, area 
grid gap - grid row gap
defining sizes: fr = fractions  px = pixels auto = creates a default behaviour to be chosen % em rem

Item and content can both be aligned and justified:
item: how we lay out the differnt grid items
content : what contains our container

grid and flexbox work very well together and have very good support across most browsers

*/

/*uncomment and recomment as you progress*/


/*
.grid-container{
    display:grid;
    grid-template-columns: 200px 300px;
    
}
*/

/*
.grid-container{
    display:grid;
    grid-template-columns: 1fr 2fr;  
}
*/

/*
.grid-container{
    display:grid;
    grid-template-columns: repeat(5,100px);  
}
*/

/*
.grid-container{
    display:grid;
    grid-template-columns: repeat(5,100px);
    grid-template-rows: 200px,150px;
    grid-auto-rows:    
}
*/


/*
.grid-container{
    display:grid;
    grid-template-columns: repeat(5,100px);
    grid-template-rows: 200px,150px;
    grid-auto-rows: 200px 
}
*/

/*
.grid-container{
    display:grid;
    grid-template-columns: 200px 200px;
    grid-auto-rows: minmax(150px,auto);
}
*/
/*
.grid-container{
    display:grid;
    grid-template-columns: 200px 200px;
    grid-auto-rows: minmax(150px,auto);
    grid-gap: 20px;  
    grid-template-areas: "header header"
    "sidebar content"
    "sidebar content";
}

.grid-item-1 {
    grid-area: header;

}

.grid-item-2 {
    grid-area: sidebar;

}

.grid-item-2 {
    grid-area: content;

}
*/


.grid-container{
    display:grid;
    grid-template-columns: 200px 200px;
    grid-auto-rows: minmax(150px,auto);
    grid-gap: 20px;
    justify-content: center;
    align-content:center;
    height: 100vh;
    justify-items: center;
    align-items: center;

}

.grid-item-1 {
    grid-column: 1/-1;
    align-self: start;
}
/*
.grid-item-1 {
    grid-column-start: 1;
    grid-column-end: 3;
}
*/

/*
.grid-item-1 {
    grid-column: span 2;
    
}
*/